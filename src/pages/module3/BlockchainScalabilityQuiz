import React, { useState } from 'react';

const BlockchainScalabilityQuiz = () => {
  const [currentQuestion, setCurrentQuestion] = useState(0);
  const [selectedAnswer, setSelectedAnswer] = useState(null);
  const [showResult, setShowResult] = useState(false);
  const [score, setScore] = useState(0);
  const [showExplanation, setShowExplanation] = useState(false);

  const updateProgress = (moduleId, sectionId, completed) => {
    console.log(`Progress updated: Module ${moduleId}, Section ${sectionId}, Completed: ${completed}`);
  };

  const quizQuestions = [
    {
      question: "What is the 'scalability trilemma' in blockchain?",
      options: [
        "Speed, cost, and efficiency",
        "Decentralization, security, and scalability",
        "Mining, staking, and validation",
        "Privacy, transparency, and speed"
      ],
      correctAnswer: 1,
      explanation: "The scalability trilemma refers to the challenge of achieving decentralization, security, and scalability simultaneously in blockchain networks. Usually, only two of these aspects can be optimized at the expense of the third."
    },
    {
      question: "Which of these is a Layer 2 scaling solution?",
      options: [
        "Proof of Stake",
        "Lightning Network",
        "Larger block sizes",
        "More mining nodes"
      ],
      correctAnswer: 1,
      explanation: "The Lightning Network is a Layer 2 scaling solution that processes transactions off the main blockchain, improving transaction speed and reducing costs while maintaining security."
    },
    {
      question: "What is sharding in blockchain?",
      options: [
        "Breaking a blockchain into multiple pieces",
        "Encrypting transaction data",
        "Increasing block size",
        "Reducing transaction fees"
      ],
      correctAnswer: 0,
      explanation: "Sharding is a scaling solution that divides the blockchain network into smaller parts (shards) that can process transactions in parallel, increasing overall network throughput."
    },
    {
      question: "What is the main purpose of blockchain interoperability?",
      options: [
        "To increase transaction speed",
        "To enable communication between different blockchains",
        "To reduce energy consumption",
        "To improve security"
      ],
      correctAnswer: 1,
      explanation: "Blockchain interoperability enables different blockchain networks to communicate and share data with each other, crucial for widespread adoption and integration of blockchain technology."
    },
    {
      question: "Which solution helps connect different blockchain networks?",
      options: [
        "Larger blocks",
        "More miners",
        "Cross-chain bridges",
        "Faster processors"
      ],
      correctAnswer: 2,
      explanation: "Cross-chain bridges are protocols that enable communication and asset transfers between different blockchain networks, helping solve the interoperability challenge."
    }
  ];

  const handleAnswerSelect = (optionIndex) => {
    setSelectedAnswer(optionIndex);
    setShowExplanation(true);
  };

  const moveToNextQuestion = () => {
    const isCorrect = selectedAnswer === quizQuestions[currentQuestion].correctAnswer;
    
    if (isCorrect) {
      setScore(prev => prev + 1);
    }

    if (currentQuestion < quizQuestions.length - 1) {
      setCurrentQuestion(prev => prev + 1);
      setSelectedAnswer(null);
      setShowExplanation(false);
    } else {
      setShowResult(true);
      const passThreshold = quizQuestions.length * 0.6;
      updateProgress(3, 'scalability-quiz', score >= passThreshold);
    }
  };

  const restartQuiz = () => {
    setCurrentQuestion(0);
    setSelectedAnswer(null);
    setShowResult(false);
    setScore(0);
    setShowExplanation(false);
  };

  if (showResult) {
    return (
      <div className="container mx-auto px-4 py-8 max-w-2xl">
        <div className="bg-white shadow-lg rounded-lg p-8 text-center">
          <h2 className="text-3xl font-bold mb-4 text-blue-800">
            Quiz Completed!
          </h2>
          <p className="text-xl mb-4">
            You scored {score} out of {quizQuestions.length}
          </p>
          {score >= 3 ? (
            <div className="bg-green-100 border-l-4 border-green-500 p-4 mb-4">
              <p className="text-green-700">
                üéâ Congratulations! You've passed the Blockchain Scalability quiz!
              </p>
            </div>
          ) : (
            <div className="bg-red-100 border-l-4 border-red-500 p-4 mb-4">
              <p className="text-red-700">
                You didn't pass this time. Review the content and try again.
              </p>
            </div>
          )}
          <button 
            onClick={restartQuiz}
            className="bg-blue-500 text-white px-6 py-2 rounded hover:bg-blue-600"
          >
            Restart Quiz
          </button>
        </div>
      </div>
    );
  }

  const currentQuizQuestion = quizQuestions[currentQuestion];

  return (
    <div className="container mx-auto px-4 py-8 max-w-2xl">
      <div className="bg-white shadow-lg rounded-lg p-8">
        <div className="mb-6">
          <h2 className="text-2xl font-bold text-blue-800 mb-4">
            Blockchain Scalability Quiz
            <span className="text-sm ml-4 text-gray-600">
              Question {currentQuestion + 1} of {quizQuestions.length}
            </span>
          </h2>
          
          <div className="bg-blue-50 rounded-lg p-4 mb-6">
            <p className="text-lg text-gray-700">
              {currentQuizQuestion.question}
            </p>
          </div>

          <div className="grid md:grid-cols-2 gap-4">
            {currentQuizQuestion.options.map((option, index) => (
              <button
                key={index}
                onClick={() => handleAnswerSelect(index)}
                className={`
                  w-full p-4 rounded-lg text-left transition-all duration-300
                  ${selectedAnswer === null 
                    ? 'bg-gray-100 hover:bg-blue-100' 
                    : index === currentQuizQuestion.correctAnswer 
                      ? 'bg-green-200' 
                      : selectedAnswer === index 
                        ? 'bg-red-200' 
                        : 'bg-gray-100'}
                `}
                disabled={selectedAnswer !== null}
              >
                {option}
              </button>
            ))}
          </div>

          {showExplanation && (
            <div className={`
              mt-6 p-4 rounded-lg
              ${selectedAnswer === currentQuizQuestion.correctAnswer 
                ? 'bg-green-100 border-l-4 border-green-500' 
                : 'bg-red-100 border-l-4 border-red-500'}
            `}>
              <h3 className="font-bold mb-2">
                {selectedAnswer === currentQuizQuestion.correctAnswer 
                  ? '‚úÖ Correct!' 
                  : '‚ùå Incorrect'}
              </h3>
              <p>{currentQuizQuestion.explanation}</p>
            </div>
          )}

          {selectedAnswer !== null && (
            <button
              onClick={moveToNextQuestion}
              className="mt-6 w-full bg-blue-500 text-white py-3 rounded-lg hover:bg-blue-600"
            >
              {currentQuestion < quizQuestions.length - 1 
                ? 'Next Question' 
                : 'Finish Quiz'}
            </button>
          )}
        </div>
      </div>
    </div>
  );
};

export default BlockchainScalabilityQuiz;
